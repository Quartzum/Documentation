# 1. Коментарии.

# - однострочный комментарий.
"""some text""" # - многострочный комментарий.

# 2. Типы данных.

# Int
a = 123

# Float
b = 1.23

# String
c = 'some'
z = "text"

"""
Для обозначения строкового типа данных можно использовать одинарные и двойные кавычки. 
Разница только в том, что внутри одинарных мы можем использовать одинарные кавычки, как часть строки, а в двойных наооборот.
Или мы можем использовтаь \' для добавления кавычки в тексте.
"""

# Boolean
d = True
f = False

# None
e = None

# List
list = [1,2,3]
list = ['1','2','3']
list = ['1','2','3',1,2,3,True,None]

# 3.Проверка типа данных.

# Для проверки типа данных мы используем функцию type(). В качестве аргумента передаем то, что хотим проверить на тип данных.
print(type(a))

# Для типа данных лист можно использовать функцию print()
print(list)

# 4.Вывод нескольких переменных.

print(a, '-',b, '-', c)
print('{1} - {2} - {0}'.format(a,b,c))
print(f'{a} - {b} - {c}')

# 5.Пробелы.

"""
Если поставить пробел там, где его не должно быть, то это может вызывать ошибку.

Пример:

 col = True - ошибка, т.к. перед col есть пробел.
"""

# 5.Ввод и вывод данных.

#Ввод данных в консоль
print()

#Вывод данных из консоли
input()

print('Введите i:')
i = input()
print('Введите q:')
q = input()

# 6.Арифметические операции с переменными.

print('Введите i:')
i = input()
print('Введите q:')
q = input()
print(i, ' + ', b, ' = ', a + b )
"""
Если мы оставим в таком варианте, то значения переменных соединятся в строку.
Чтобы такого не происходило необходимо указывать тип данных у переменной:
"""

print('Введите i:')
i = float(input())
print('Введите q:')
q = float(input())
print(i, ' + ', b, ' = ', a + b )

# Унарный плюс
k = +1

# Унарный минус
k = -1

# Сложение
k = 1
l = 10
j = k + l
print(j)

# Вычитание
k = 1
l = 10
j = k - l
print(j)

# Умножение
k = 1
l = 10
j = k * l
print(j)

# Деление для чисел с плавающей запятой
k = 1
l = 10
j = k / l
print(j)
# По умолчанию деление будет производиться, как для чисел с плавающей запятой

# Деление для целых чисел
k = 1
l = 10
j = k // l
print(j)

# Остаток от деления
k = 1
l = 10
j = k % l
print(j)

# Возведенье в степень
k = 1
l = 10
j = k ** l
print(j)

# У языка python есть возможность работать с большими числами, т.к. типы данных не ограничены размером.

# 7.Функция range

"""
Функция range() предназначена для работы с интервалами.
Она принимает три аргумента:
- start(0) - по умолчанию 0. Старт интервала.
- stop() - при вызове функции мы должны передать какое-то значение. Конец интервала.
- step() - по умолчанию 0. Конец интервала.
"""

# 8.Функция round

# В python при умножении целого числа на число с плавающей запятой могут появляться баги.
# Функция round позволяет производить умножение в целое число(либо число с плавающей запятой)
# Также с помощью неё можно задать определенное количество знаков после запятой.

num1 = 13
num2 = 16.5

sum = round(num1 * num2, 5)

# Первым аргументом передаём значение, вторым количество знаков после запятой.

# 9. Сокращённые арифметические операции.

# Сложение
num = 1
num+=5

# Вычитание
num = 1
num-=5

# Умножение
num = 1
num*=5

# Деление
num = 1
num/=5

# 10. Логические операции.

# >, >=, <, <=, ==, != - также как и в других языках.

# Логическое И
# and

# Логическое ИЛИ
# or

# Логическое не
# not

# in
# Проверяет есть ли внутри чего-то данное значение.

f = [1,2,3,4]
print(f)
print(2 in f)

# 11. Неограниченное количество логических сравнений.

# В языке python есть возможность применять в одном выражении
# огромное количество сравнений.

func = 1
T = 5
x = 123

print(func<T>x)

# 12. if, if...else, elif.

# ОТСТУПЫ ВАЖНЫ, иначе интерпретатор выдаст ошибку!

# elif - это дополнительное условие в ветке if...else.

a = 1

if a < 1:
    a *= 1
elif a > 1:
    a /= 10
else:
    a /= 1

# 13. While.

# У блока while можно добавить блок else

original = 23
inverted = None

while original != 0:
    inverted = inverted * 10 + (original % 10)
    original //= 10
else:
    print('Пожалуй хватит!')
print(inverted)

# 14. For.

list = [1,2,3,4,5]

for i in list:
    print(i**2)

# 15. Работа со строками.

text = 'съешь ещё этих мягких французских булок'

print(len(text)) # Длинна строки
print('ещё' in text) # Проверка наличия строки внутри переменной.
print(text.isdigit()) # Проверка того, что все символы целые числа.
print(text.islower()) # Проверка того, что все символы имеют нижний регистр.
print(text.replace('ещё', 'ЕЩЁ')) # Замена части строки на ту, которую мы передаём.

# 16. Функция help.

# Позволяет выдать в консоль, что делает какой-либо метод или фунция.

help(int)

# 17. Срезы.
text = 'съешь ещё этих мягких французских булок'

print(text[0]) #с
print(text[1]) #ъ
# print(text[len(text)]) - IndexError
print(text[len(text)-1]) #к
print(text[-5]) #б
print(text[:]) #print(text)
print(text[2:5]) #съ
print(text[len(text)-2:]) #ок
print(text[2:9]) #ешь ещё
print(text[6:-18]) #ещё этих мягких
print(text[0:len(text):6]) #сеикакл
print(text[::6]) #сеикакл

# 18. Списки.

# Список - пронумерованная, изменяемая коллекция объектов.

numbers = [1,2,3,4,5]
print(numbers)

ran = range(1,6)
print(type(ran)) # Тип данных - range

numbers = list(ran)
print(type(numbers)) # Тип данных - list

print(len(numbers)) # Длинна списка

numbers.append(5) # Добавить значение в конец списка
numbers.remove(1) # Удалить элемент из списка
del numbers[3] # Удалить элемент из списка

# 19. Функции.

def function_name(a):
    print('Some text')
    return