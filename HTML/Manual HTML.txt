1)Структура HTML5 документа:
==================================================================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
</head>
<body>
    
</body>
</html>

Теги документа:

<!DOCTYPE html> - этот тег показывает браузеру, что данный файл был создан на HTML5.
<html></html> - он содержит все теги в файле(как контейнер).
<head></head> - этот тег подключает вспомогательные теги,
которые нужны для хранения метаданных(того, что не видит пользователь).
<body></body> - то что находится внутри этого тега, будет видно на странице.
<meta> - тег указателя кодировки.
<title></title> - тег заголовка.

2)Основные теги для верстки:
==================================================================================================
<div></div> - блочный элемент.
<span></span> - строчный элемент.

Блочный элемент создает разрыв строки перед тегом и после него. Он образуют прямоугольную
область, по ширине занимающую всю ширину веб-страницы или блока-родителя, если для него не
задано значение width.
Блочные элементы могут содержать внутри себя элементы любого типа. Нельзя размещать блочные
элементы внутри строчных, за исключением элемента <img>. Для блочных элементов можно
задавать margin и padding. Свойства width и height устанавливают ширину и высоту области
содержимого элемента. Фактическая ширина элемента складывается из ширины полей (внутренних
отступов), границ и внешних отступов.

Строчные элементы не создают блоки, они отображаются на одной строке с содержимым рядом
стоящих тегов. Строчные элементы являются потомками блочных элементов. Они игнорируют
верхние и нижние margin и padding, но, если для элемента задан фон, он будет распространяться на
верхний и нижний padding, заходя на соседние строки текста.
Ширина и высота строчного элемента зависит только от его содержания, задать его размеры с
помощью CSS нельзя. Можно увеличить расстояние между соседними элементами по горизонтали с
помощью горизонтальных полей и отступов.
Давайте вспомним, какие основные элементы html относятся к блочным, а какие к строчным.

3)Работа с текстом:
==================================================================================================
1.<!-- --> - тег комментария.
2.<h1></h1>(самый большой заголовок)-<h6></h6> - тег заголовка.
3.<p></p> - параграф.
Атрибуты:
1)align="center" - расположить текст внутри по центру.(Не работает в HTML5)
4.<strong></strong> - делает текст жирным.
6.<b></b> - делает текст жирным.
Оба текста делают текст жирным, но если использовать тег strong, то он будет во время аудио прослушиванья
интонацией выделять текст внутри этого тега.
7.<em></em> - тег курсива.
8.<i></i> - тег курсива.
В этих двух тегах также интонацией будет выделяется текст.
9.<sub></sub> - подстрочный текст.
10.<sup></sup> - надстрочный текст.
11.<ins></ins> - текст помещенный внутри такого тега на сайте будет подчеркнут.
12.<del></del> - текст помещенный внутри такого тега на сайте будет подчеркнут.
12.<small></small> - делает размер шрифта на один меньше.(HTML4 - в HTML5 уже не используется).
13.<big></big> - делает размер шрифта на один больше.(HTML4 - в HTML5 уже не используется).
14.<hr> - создает в строке линию.
Атрибуты:
1)width - ширина.(в % или px)
2)height - высота.(в % или px)
15.<pre> - предварительно отформатированный текстовый элемент.

4)Списки:
==================================================================================================
1.<ol></ol> - упорядоченный список(то есть всё будет пронумеровано).
<li></li> - тег нумерации списка <ol></ol>.

Структура списка:
<ol>
    <li></li>
</ol>

2.<ul></ul> - неупорядоченный список. Будут ставится черные точки.

Стуктура списка:
<ul>
    <li></li>
</ul>

3.<dl></dl> - тег с описанием. Он необходим, если в нумерации листа, необходимо
указать какое-то описание. По сути контейнер.
<dt></dt> - создает термин(что нужно описать).
<dd></dd> - создает описание.

Структура списка:
<dl>
    <dt></dt>
    <dd></dd>
</dl>

Стуктура вложенного списка:

<ol>
    <li></li>
    <li>
        <ul>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </li>
</ol>

Такая структура используется для сложной иерархической структуры текста,
обычно для юридических или технических документов.
Также для создания многоуровневых меню и навигации по сайту.

5)Работа с изображениями(файлами) и ссылками:
==================================================================================================
1)<img src="" alt=""> - предназначен для отображения на веб-странице изображений
в графическом формате GIF, JPEG или PNG.

Атрибуты:
1.src - указывает источник картинки.
2.width и height - ширина и высота картинки.
3.alt - указывает вместо картинки текст. Часто используется для продвижения сайтов,
по ключевым словами.
4.align - выравнивание.
5.title - то, что будет написано внутри атрибута, будет выводится в виде всплывающей подсказки.

2)<a></a> - тег ссылки.

Атрибуты:
1.href - путь ссылки. Этим атрибутом можно делать ссылки на другие файлы и ссылки.

a)<a href="https://www.google.ru/">Название ссылки</a> - обычная ссылка.
b)<a href=#test>Название ссылки</a> - ссылка по индентификатору.
(часть используется для перехода, от одной части страницы, к другой). 
Это еще называют Якорем гиперссылки.
c)<a href="Путь файла"></a> - ссылка на файл.
d)<a href="mailto:Tempert@yandex.ru"></a> - указание почты(перенаправление).

2.target - открывает ссылку в новой вкладке.
3.title - выводит подсказку при наведение на ссылку.
4.id - перевод на какой-либо индентификатор
(можно например использовать для перехода с конца страницы на начало).

2)<table></table> - тег таблицы. Работает как контейнер.

Атрибуты:
border="" - рамка таблицы.
width="" - ширина таблицы.
height="" - высота таблицы.
align="" - выравниванье.
cellpadding="" - отступы в ячейках таблицы.
cellspacing="" - расстояние между ячейками.

Применяется вместе с тегами <tr></tr> - тег рядов, <td></td> - тег столбцов.

<tr></tr> - тег ячейки таблицы.

Атрибуты:

colspan="" - атрибут, который объединяет ячейки по горизонтали.
rowspan="" - атрибут, который объединяет ячейки по вертикали.

<td></td> - тег для создание ячейки, внутри которой хранятся данные.

Атрибуты:

colspan="" - атрибут, который объединяет ячейки по горизонтали.
rowspan="" - атрибут, который объединяет ячейки по вертикали.
brcolor="" - атрибут, который задает цвет ячейки.

Таблицы можно вкладывать друг в друга, используя как каркас для создания сайта.Пример:

<table>
    <tr>
        <td>
            <table>
                <tr>
                    <td>
                        
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>

3)<th></th> - тег, для создания специальной ячейки с заголовком,
в которой текст выделяется полужирным шрифтом.
4)<caption>...</caption> - обрамление заголовка таблицы (текст, размещенный между этими
тегами, выравнивается по центру). В исходном коде тег <caption> ставится сразу после тега
<table>.
5)<thead>...</thead> - обрамление шапки таблицы (в одной таблице допускается не более
одного тега <thead>).
6)<tbody>...</tbody> - группирует строки таблицы в один табличный блок (таких блоков в
таблице может быть несколько).
7)<tfoot>...</tfoot> - обрамление футера, т.е. нижней, завершающей части таблицы (в одной
таблице допускается не более одного тега <tfoot>). В исходном коде тег <tfoot> ставится до
тега <tbody>.
8)<colgroup></colgroup> - Элемент <colgroup> создает структурную группу столбцов, выделяя логически однородные ячейки.
Группирует один или более столбцов для форматирования, позволяя применить стили к столбцам,
вместо того, чтобы повторять стили для каждой ячейки и для каждой строки. Добавляется
непосредственно после тегов <table> и <caption>.
9)<col> - Элемент <col> формирует неструктурные группы
столбцов, которые делят таблицу на разделы, не относящиеся к общей структуре, т.е. не содержащие информацию одного типа. Позволяет задавать свойства столбцов для каждого столбца в пределах
элемента <colgroup>. С помощью атрибута <style> можно изменить основной цвет фона ячеек. Для
элемента <col> доступен атрибут span, задающий количество столбцов для объединения.

6)Работа с серверной частью.
==================================================================================================
<form></form> - тег формы. Количество форм на странице не ограничено, 
но вкладывать форму в форму нельзя.

Атрибуты:

action="" - атрибут, который указывает, куда необходимо скидывать информацию обработчику,
написанному на серверном языке.
method="POST" - метод.
name = "" - атрибут имени формы.

Внутри этого тега часто используются следующие теги:

<fieldset></fieldset> - объединение того, что внутри тега в рамку.
<legend></legend> - обычно используется вместе с тегом <fieldset></fieldset>,
для обозначения того, что объединено в этот тег.

Пример формы:

<form action="">
    <fieldset>
        <legend></legend>
        <legend></legend>
    </fieldset>
</form>

Если после тега <fieldset></fieldset> идет тег <legend></legend>, 
то перед ним больше ничего не должно быть. Внутри тега <legend></legend> можно использовать
теги вроде <b></b> и <i></i>.

<textarea></textarea> - тип формы, текстовая область.

Атрибуты:
name="" - имя.
cols="" - кол-во колонок(ширина).
rows="" - кол-во рядов(высота).
id="" - индентификатор.

<select></select> - тип формы, выпадающий список.

Атрибуты:

name="" - имя.
size="" - число строк, который увидит пользователь в браузере
multiple="" - позволяет выбрать несколько опций пользователю(в значении ставится multiple).

Работает вместе с тегом <option></option> - тег предоставления опции(выбора).

Атрибуты:
selected - при открытии окна, какое-то значение уже будет выбрано.
value - значение для обработчика.

Структура тега:

<select name="" id="">
    <option value=""></option>
</select>

<input> - тип формы, тег ввода информации.

Атрибуты:

name="" - имя поля.
size="" - длинна поля для ввода информации.
maxlength="" - максимальная длинна вводимой информации.
value ="" - атрибут, который отправляет данные обработчику, в тот момент,
когда человек нажимает кнопку отправить.
checked - атрибут, который отмечает конкретную кнопку, при первой загрузке страницы.
type="" - вид вводимой информации. Виды:
text - текст.
password - пароль.
radio - радиокнопка. Если делаются радиокнопки, которые
взаимоисключаются(то есть два варианта ответа), то необходимо
оставить атрибут name точно такой же, как и другой
радиокнопки.
checkbox="" - чекбокс.
submit-отправка данных на сервер
reset- очистка формы на сайте.
image - кнопка превращается в картинку.
button - используется в JavaScript.
file - позволяет пользователю выбрать файл для загрузки на сервер.

<label></label> - тег, который позволяет при наведении на текст,
перейти на место ввода данных.
Тег <label> устанавливает связь между определенной меткой,
в качестве которой обычно выступает текст, и элементом формы (<input>, <select>, <textarea>). 
Такая связь необходима, чтобы изменять значения элементов формы при нажатии курсором мыши
на текст. Кроме того, с помощью <label> можно устанавливать горячие клавиши на клавиатуре
и переходить на активный элемент подобно ссылкам.

Существует два способа связывания объекта и метки. Первый заключается в использовании
идентификатора id внутри элемента формы и указании его имени в качестве атрибута for тега <label>.
При втором способе элемент формы помещается внутрь контейнера <label>.

7)Работа со стилями и оформлением:
==================================================================================================
<style></style> - подключение стиля. Пишется внутри тега <head></head>.
Структура тега:
<link> - тег ссылки на файл CSS. Используется внутри тега <head></head>. 
Необходимо в каждом HTML файле, в котором мы хотим работать с CSS, прописать данную строку.

8)Дополнительные теги:

1.<applet> -предназначен для вставки на страницу апплетов — небольших программ, написанных на языке Java. 
Этот тег является устаревшим, взамен необходимо использовать более гибкий тег <object>. 
Между открывающим и закрывающим тегом можно добавить текст, который будет отображаться в браузере, 
если он не поддерживает апплеты. В противном случае текст не выводится.

2.<object> - сообщает браузеру, как загружать и отображать объекты, которые исходно браузер не понимает. 
Как правило, такие объекты требуют подключения к браузеру специального модуля, который называется плагин, 
или запуска вспомогательной программы.

3.<iframe> - создает плавающий фрейм, который находится внутри обычного документа, 
он позволяет загружать в область заданных размеров любые другие независимые документы.

Тег <iframe> является контейнером, содержание которого игнорируется браузерами,
не поддерживающими данный тег. Для таких браузеров можно указать альтернативный текст, 
который увидят пользователи. Он должен располагаться между элементами <iframe> и </iframe>.

4.<map> - служит контейнером для элементов <area>, которые определяют активные области для карт-изображений. 
Такие области устанавливают невидимые зоны на изображении, являющиеся ссылками на HTML-документы. 
Цель использования тега <map> — в связывании тега <img> с клиентской картой-изображением. 
Эта связь определяется применением единого идентификатора как в теге <img>, задаваемого атрибутом usemap, 
так и в теге <map>, устанавливаемого атрибутом name.

5.Тег <script> предназначен для описания скриптов, может содержать ссылку на программу или
ее текст на определенном языке. Скрипты могут располагаться во внешнем файле
и связываться с любым HTML-документом. Такой подход позволяет использовать одни и те же общие функции
на многих веб-страницах и ускоряет их загрузку, т.к. внешний файл кэшируется при первой загрузке, 
и скрипт вызывается быстрее при последующих вызовах.

<script> может располагаться в заголовке или теле HTML-документа в неограниченном количестве. 
В большинстве случаев местоположение скрипта никак не сказывается на работу программы. 
Однако скрипты, которые должны выполняться в первую очередь, обычно помещают в заголовок документа.